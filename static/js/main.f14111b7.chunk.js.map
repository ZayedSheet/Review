{"version":3,"sources":["components/Buttons/SigninLoginButton.js","components/Search/SearchBar.js","components/Home.js","components/Submission.js","components/MapContainer.js","components/Submission/Star.js","components/Submission/ListItem.js","components/Results.js","components/Area.js","components/Nav/Navbar.js","components/Footer/Footer.js","components/Forms/FormHook.js","components/Forms/SignupForm.js","components/Forms/LoginForm.js","App.js","serviceWorker.js","index.js"],"names":["SigninLoginButton","props","onClick","setLoginSignup","className","children","SearchBar","useState","locationToggled","updateToggle","lat","lng","centerCoords","updateLongitude","getPosition","position","coords","latitude","longitude","document","querySelector","style","color","type","placeholder","name","navigator","geolocation","getCurrentPosition","title","to","pathname","state","Home","setLogin","formName","setSignup","Submission","value","id","htmlFor","pattern","required","autoFocus","alert","accept","mapStyles","width","height","GoogleApiWrapper","apiKey","console","log","handleClick","item","listItems","getElementsByClassName","i","length","backgroundColor","google","zoom","initialCenter","center","Star","a","push","linkStyle","textDecoration","ListItem","stars","toggleMap","classList","toggle","Results","location","useLocation","description","results","map","href","aria-hidden","action","rows","cols","Navbar","isOpen","toggleLinks","Footer","useSignUpForm","inputs","setInputs","validationErrors","wasFocused","errorMessage","setErrorMessage","validateField","fieldname","fieldLength","match","checked","handleSubmit","event","errorExists","preventDefault","Object","values","field","handleInputChange","persist","target","error","displayError","SignupForm","onSubmit","onBlur","onChange","displayName","userEmail","userName","userPassword","LoginForm","App","form","signup","login","path","render","exact","component","Area","Boolean","window","hostname","ReactDOM","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f14111b7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SigninLoginButton.css' //Styling specific to the buttons\r\n\r\n/**\r\n * Sign and login button\r\n * @param props properties of the component,\r\n *              props.formName is the form that the button toggles (either sign in or login form)\r\n * @returns A sign in or login Component (depending on formName property)\r\n */\r\nconst SigninLoginButton = (props) => {\r\n\r\n    /**\r\n     * Toggles visibility of the corresponding form (sign in or login form)\r\n     */\r\n    // const toggleForm = () => {\r\n    //     document.getElementById(props.formName).classList.toggle(props.formName);\r\n    // }\r\n\r\n    return(\r\n      //  When the button is clicked, the corresponding form appears on screen\r\n      <button onClick={()=>props.setLoginSignup(true)} className={`button-style`}>\r\n          {/*The text inside the button, will be the components children\r\n          (the text between the components open and closing tag)*/}\r\n          {props.children}\r\n      </button>\r\n    );\r\n};\r\n\r\nexport default SigninLoginButton;","import React, {useState} from 'react';\r\nimport \"./SearchBar.css\";\r\n\r\n/*\r\nNav Link Component allows links to be added to change the current page.\r\nIn other words, change the component in the App.js switch statement\r\n */\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n/**\r\n * General search bar to search the website for objects\r\n * @returns SearchBar component\r\n */\r\nconst SearchBar = () => {\r\n    /*\r\n    Variables for geolocation functionality,\r\n    coordinates set to false until user searches by location\r\n     */\r\n    let [locationToggled, updateToggle] = useState(false);\r\n    let [centerCoords, updateLongitude] = useState({ lat: 43.0896, lng: -79.0849}); //set initial location to niagara falls\r\n\r\n    /**\r\n     * Toggles to colour on the location search option in the search bar depending on if it is selected\r\n     * Sets locationToggled to true if the option is enabled\r\n     * Initializes the coordinates of the user via the getPosition function\r\n     */\r\n    const isToggled = () => {\r\n        if (navigator.geolocation && !locationToggled){\r\n            navigator.geolocation.getCurrentPosition(getPosition);\r\n        }\r\n        else{ //if search by location is already toggled or geolocation doesn't work on this browser\r\n            let searchByGeoElement = document.querySelector(\".search .fa-location-arrow\").style.color = \"#cccccc\"; //sets search by location icon back to grey\r\n            // for (let i = 0; i < searchByGeoElement.length; i++){\r\n            //     searchByGeoElement[i].style.color = \"#cccccc\"; //sets search by location icon back to grey\r\n            // }\r\n            updateToggle(false);\r\n            updateLongitude( { lat: 43.0896, lng: -79.0849}); //sets location back to niagara\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Initializes the coordinates of the user, and displays them to the user\r\n     * @param position The longitude and latitude of the user,\r\n     * obtained from the geoLoaction api.\r\n     */\r\n    function getPosition(position) {\r\n        updateLongitude( {lat:position.coords.latitude, lng:position.coords.longitude});\r\n        let searchByGeoElement = document.querySelector(\".search .fa-location-arrow\").style.color = \"#0b7dda\"; //sets search by location icon back to grey\r\n        // for (let i = 0; i < searchByGeoElement.length; i++){\r\n        //     searchByGeoElement[i].style.color = \"#0b7dda\"; //sets get location button to blue\r\n        // }\r\n        searchByGeoElement[0].style.color = \"#0b7dda\";\r\n        updateToggle(true);\r\n    }\r\n\r\n    return(\r\n        //Container for the entire search bar\r\n        <form className={\"search\"}>\r\n            {/*Input text field*/}\r\n            <input type=\"text\" placeholder=\"Search..\" name=\"search\" />\r\n            {/*Container for the search by location button,\r\n            when clicked it toggles search by location and sets the coords*/}\r\n            <div onClick={isToggled} title=\"Click me to toggle search by location!\" className={\"search-location-button\"}>\r\n                <i className=\"fas fa-location-arrow\"/>\r\n            </div>\r\n            {/*Search button*/}\r\n            <NavLink className=\"search-button\" to={{\r\n                pathname: '/Results',\r\n                state: { //props for the results page. This tells the page where to initially center the map\r\n                    centerCoords: centerCoords\r\n                }\r\n            }} type=\"button\">\r\n                <i className=\"fa fa-search\"/>\r\n            </NavLink>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default SearchBar;","import React from 'react';\r\n\r\nimport SigninLoginButton from \"./Buttons/SigninLoginButton\";\r\n\r\nimport SearchBar from \"./Search/SearchBar\";\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\n/**\r\n * Home page containing login/signup buttons, search bar and background image.\r\n * @returns Home Page as a Component\r\n */\r\nconst Home = (props) => {\r\n    return (\r\n        /* div.container contains the buttons, search bar and\r\n         * displays the background of the home page between the navbar and header\r\n         */\r\n        <div className={\"container\"}>\r\n            {/*Mobile login and signup buttons*/}\r\n            <div className={\"buttons-main\"}>\r\n                {/*Login/Signup buttons are done through a component\r\n                 as the buttons have similar style and functionality*/}\r\n                <SigninLoginButton setLoginSignup={props.setLogin} formName={\"login\"}>Login</SigninLoginButton>\r\n                <SigninLoginButton setLoginSignup={props.setSignup} formName={\"signup\"}>Sign Up</SigninLoginButton>\r\n            </div>\r\n\r\n            {/*Mobile Search Bar*/}\r\n            <div className={\"search-main\"}>\r\n                <SearchBar/> {/* Search Bar (aka Search Form) component*/}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\n\r\n/**\r\n * Submission page where users can add an area (a object) to the website\r\n * @returns A Submission Page Component\r\n */\r\nconst Submission = () => {\r\n    /*\r\n    Coordinates (longitude and latitude) of the user,\r\n    set the false until the button is clicked to retrieve them\r\n     */\r\n    let coords = {longitude: false, latitude:false};\r\n\r\n    /**\r\n     * Checks if the geolocation api is supported,\r\n     * if it is the location will be initalized via showPosition function\r\n     */\r\n    function getLocation() {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(getPosition);\r\n        } else {\r\n            alert(\"Geolocation unsupported\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initializes the coordinates of the user, and displays them to the user\r\n     * @param position The longitude and latitude of the user,\r\n     * obtained from the geoLoaction api.\r\n     */\r\n    function getPosition(position) {\r\n        coords = {longitude: position.coords.longitude, latitude: position.coords.latitude};\r\n        document.querySelector(\"input[name='longitude']\").value = coords.longitude;\r\n        document.querySelector(\"input[name='latitude']\").value = coords.latitude;\r\n    }\r\n\r\n    return(\r\n\r\n        /*\r\n        Form for the add an object (aka an area) to a page,\r\n        contains css/html5 form validation using the pattern and required attribute\r\n        Each input is separated in divs to allow easier css grids usage\r\n         */\r\n        <form id=\"full-page-form\" className=\"form-style\">\r\n            <h1>Add an Area!</h1>\r\n            {/*Input for the name of the area*/}\r\n            <div>\r\n                <label htmlFor=\"areaName\">Area Name</label>\r\n                <input type=\"text\" name=\"areaName\" placeholder=\"Name of area..\" pattern=\"^([a-zA-Z]+\\s)*[a-zA-Z]+$\" required autoFocus/><br/>\r\n                {/*Ensures input matches the regex pattern for names. No white spaces can occur before or after the full name and only one space is allowed between strings. This field is autofocused when page renders. This field is required to be filled*/}\r\n            </div>\r\n            {/*Input for the city of the object*/}\r\n            <div>\r\n                <label htmlFor=\"areaCity\">City</label>\r\n                <input type=\"text\" name=\"areaCity\" placeholder=\"City Name..\" pattern=\"^([a-zA-Z]+\\s)*[a-zA-Z]+$\" required/><br/>\r\n                {/*Ensures input matches regex pattern for names. Required attributes means this field is required to be filled*/}\r\n            </div>\r\n            {/*Input of the country of the object*/}\r\n            <div>\r\n                <label htmlFor=\"areaCountry\">Country</label>\r\n                {/*Select Input is used to only allow one country to be selected from a set of predetermined options*/}\r\n                <select>\r\n                    <option value=\"CA\">Canada</option>\r\n                    <option value=\"US\">United States</option>\r\n                    <option value=\"AF\">Afghanistan</option>\r\n                    <option value=\"AX\">Åland Islands</option>\r\n                    <option value=\"AL\">Albania</option>\r\n                    <option value=\"DZ\">Algeria</option>\r\n                    <option value=\"AS\">American Samoa</option>\r\n                    <option value=\"AD\">Andorra</option>\r\n                    <option value=\"AO\">Angola</option>\r\n                    <option value=\"AI\">Anguilla</option>\r\n                    <option value=\"AQ\">Antarctica</option>\r\n                    <option value=\"AG\">Antigua and Barbuda</option>\r\n                    <option value=\"AR\">Argentina</option>\r\n                    <option value=\"AM\">Armenia</option>\r\n                    <option value=\"AW\">Aruba</option>\r\n                    <option value=\"AU\">Australia</option>\r\n                    <option value=\"AT\">Austria</option>\r\n                    <option value=\"AZ\">Azerbaijan</option>\r\n                    <option value=\"BS\">Bahamas</option>\r\n                    <option value=\"BH\">Bahrain</option>\r\n                    <option value=\"BD\">Bangladesh</option>\r\n                    <option value=\"BB\">Barbados</option>\r\n                    <option value=\"BY\">Belarus</option>\r\n                    <option value=\"BE\">Belgium</option>\r\n                    <option value=\"BZ\">Belize</option>\r\n                    <option value=\"BJ\">Benin</option>\r\n                    <option value=\"BM\">Bermuda</option>\r\n                    <option value=\"BT\">Bhutan</option>\r\n                    <option value=\"BO\">Bolivia, Plurinational State of</option>\r\n                    <option value=\"BQ\">Bonaire, Sint Eustatius and Saba</option>\r\n                    <option value=\"BA\">Bosnia and Herzegovina</option>\r\n                    <option value=\"BW\">Botswana</option>\r\n                    <option value=\"BV\">Bouvet Island</option>\r\n                    <option value=\"BR\">Brazil</option>\r\n                    <option value=\"IO\">British Indian Ocean Territory</option>\r\n                    <option value=\"BN\">Brunei Darussalam</option>\r\n                    <option value=\"BG\">Bulgaria</option>\r\n                    <option value=\"BF\">Burkina Faso</option>\r\n                    <option value=\"BI\">Burundi</option>\r\n                    <option value=\"KH\">Cambodia</option>\r\n                    <option value=\"CM\">Cameroon</option>\r\n                    <option value=\"CV\">Cape Verde</option>\r\n                    <option value=\"KY\">Cayman Islands</option>\r\n                    <option value=\"CF\">Central African Republic</option>\r\n                    <option value=\"TD\">Chad</option>\r\n                    <option value=\"CL\">Chile</option>\r\n                    <option value=\"CN\">China</option>\r\n                    <option value=\"CX\">Christmas Island</option>\r\n                    <option value=\"CC\">Cocos (Keeling) Islands</option>\r\n                    <option value=\"CO\">Colombia</option>\r\n                    <option value=\"KM\">Comoros</option>\r\n                    <option value=\"CG\">Congo</option>\r\n                    <option value=\"CD\">Congo, the Democratic Republic of the</option>\r\n                    <option value=\"CK\">Cook Islands</option>\r\n                    <option value=\"CR\">Costa Rica</option>\r\n                    <option value=\"CI\">Côte d'Ivoire</option>\r\n                    <option value=\"HR\">Croatia</option>\r\n                    <option value=\"CU\">Cuba</option>\r\n                    <option value=\"CW\">Curaçao</option>\r\n                    <option value=\"CY\">Cyprus</option>\r\n                    <option value=\"CZ\">Czech Republic</option>\r\n                    <option value=\"DK\">Denmark</option>\r\n                    <option value=\"DJ\">Djibouti</option>\r\n                    <option value=\"DM\">Dominica</option>\r\n                    <option value=\"DO\">Dominican Republic</option>\r\n                    <option value=\"EC\">Ecuador</option>\r\n                    <option value=\"EG\">Egypt</option>\r\n                    <option value=\"SV\">El Salvador</option>\r\n                    <option value=\"GQ\">Equatorial Guinea</option>\r\n                    <option value=\"ER\">Eritrea</option>\r\n                    <option value=\"EE\">Estonia</option>\r\n                    <option value=\"ET\">Ethiopia</option>\r\n                    <option value=\"FK\">Falkland Islands (Malvinas)</option>\r\n                    <option value=\"FO\">Faroe Islands</option>\r\n                    <option value=\"FJ\">Fiji</option>\r\n                    <option value=\"FI\">Finland</option>\r\n                    <option value=\"FR\">France</option>\r\n                    <option value=\"GF\">French Guiana</option>\r\n                    <option value=\"PF\">French Polynesia</option>\r\n                    <option value=\"TF\">French Southern Territories</option>\r\n                    <option value=\"GA\">Gabon</option>\r\n                    <option value=\"GM\">Gambia</option>\r\n                    <option value=\"GE\">Georgia</option>\r\n                    <option value=\"DE\">Germany</option>\r\n                    <option value=\"GH\">Ghana</option>\r\n                    <option value=\"GI\">Gibraltar</option>\r\n                    <option value=\"GR\">Greece</option>\r\n                    <option value=\"GL\">Greenland</option>\r\n                    <option value=\"GD\">Grenada</option>\r\n                    <option value=\"GP\">Guadeloupe</option>\r\n                    <option value=\"GU\">Guam</option>\r\n                    <option value=\"GT\">Guatemala</option>\r\n                    <option value=\"GG\">Guernsey</option>\r\n                    <option value=\"GN\">Guinea</option>\r\n                    <option value=\"GW\">Guinea-Bissau</option>\r\n                    <option value=\"GY\">Guyana</option>\r\n                    <option value=\"HT\">Haiti</option>\r\n                    <option value=\"HM\">Heard Island and McDonald Islands</option>\r\n                    <option value=\"VA\">Holy See (Vatican City State)</option>\r\n                    <option value=\"HN\">Honduras</option>\r\n                    <option value=\"HK\">Hong Kong</option>\r\n                    <option value=\"HU\">Hungary</option>\r\n                    <option value=\"IS\">Iceland</option>\r\n                    <option value=\"IN\">India</option>\r\n                    <option value=\"ID\">Indonesia</option>\r\n                    <option value=\"IR\">Iran, Islamic Republic of</option>\r\n                    <option value=\"IQ\">Iraq</option>\r\n                    <option value=\"IE\">Ireland</option>\r\n                    <option value=\"IM\">Isle of Man</option>\r\n                    <option value=\"IL\">Israel</option>\r\n                    <option value=\"IT\">Italy</option>\r\n                    <option value=\"JM\">Jamaica</option>\r\n                    <option value=\"JP\">Japan</option>\r\n                    <option value=\"JE\">Jersey</option>\r\n                    <option value=\"JO\">Jordan</option>\r\n                    <option value=\"KZ\">Kazakhstan</option>\r\n                    <option value=\"KE\">Kenya</option>\r\n                    <option value=\"KI\">Kiribati</option>\r\n                    <option value=\"KP\">Korea, Democratic People's Republic of</option>\r\n                    <option value=\"KR\">Korea, Republic of</option>\r\n                    <option value=\"KW\">Kuwait</option>\r\n                    <option value=\"KG\">Kyrgyzstan</option>\r\n                    <option value=\"LA\">Lao People's Democratic Republic</option>\r\n                    <option value=\"LV\">Latvia</option>\r\n                    <option value=\"LB\">Lebanon</option>\r\n                    <option value=\"LS\">Lesotho</option>\r\n                    <option value=\"LR\">Liberia</option>\r\n                    <option value=\"LY\">Libya</option>\r\n                    <option value=\"LI\">Liechtenstein</option>\r\n                    <option value=\"LT\">Lithuania</option>\r\n                    <option value=\"LU\">Luxembourg</option>\r\n                    <option value=\"MO\">Macao</option>\r\n                    <option value=\"MK\">Macedonia, the former Yugoslav Republic of</option>\r\n                    <option value=\"MG\">Madagascar</option>\r\n                    <option value=\"MW\">Malawi</option>\r\n                    <option value=\"MY\">Malaysia</option>\r\n                    <option value=\"MV\">Maldives</option>\r\n                    <option value=\"ML\">Mali</option>\r\n                    <option value=\"MT\">Malta</option>\r\n                    <option value=\"MH\">Marshall Islands</option>\r\n                    <option value=\"MQ\">Martinique</option>\r\n                    <option value=\"MR\">Mauritania</option>\r\n                    <option value=\"MU\">Mauritius</option>\r\n                    <option value=\"YT\">Mayotte</option>\r\n                    <option value=\"MX\">Mexico</option>\r\n                    <option value=\"FM\">Micronesia, Federated States of</option>\r\n                    <option value=\"MD\">Moldova, Republic of</option>\r\n                    <option value=\"MC\">Monaco</option>\r\n                    <option value=\"MN\">Mongolia</option>\r\n                    <option value=\"ME\">Montenegro</option>\r\n                    <option value=\"MS\">Montserrat</option>\r\n                    <option value=\"MA\">Morocco</option>\r\n                    <option value=\"MZ\">Mozambique</option>\r\n                    <option value=\"MM\">Myanmar</option>\r\n                    <option value=\"NA\">Namibia</option>\r\n                    <option value=\"NR\">Nauru</option>\r\n                    <option value=\"NP\">Nepal</option>\r\n                    <option value=\"NL\">Netherlands</option>\r\n                    <option value=\"NC\">New Caledonia</option>\r\n                    <option value=\"NZ\">New Zealand</option>\r\n                    <option value=\"NI\">Nicaragua</option>\r\n                    <option value=\"NE\">Niger</option>\r\n                    <option value=\"NG\">Nigeria</option>\r\n                    <option value=\"NU\">Niue</option>\r\n                    <option value=\"NF\">Norfolk Island</option>\r\n                    <option value=\"MP\">Northern Mariana Islands</option>\r\n                    <option value=\"NO\">Norway</option>\r\n                    <option value=\"OM\">Oman</option>\r\n                    <option value=\"PK\">Pakistan</option>\r\n                    <option value=\"PW\">Palau</option>\r\n                    <option value=\"PS\">Palestinian Territory, Occupied</option>\r\n                    <option value=\"PA\">Panama</option>\r\n                    <option value=\"PG\">Papua New Guinea</option>\r\n                    <option value=\"PY\">Paraguay</option>\r\n                    <option value=\"PE\">Peru</option>\r\n                    <option value=\"PH\">Philippines</option>\r\n                    <option value=\"PN\">Pitcairn</option>\r\n                    <option value=\"PL\">Poland</option>\r\n                    <option value=\"PT\">Portugal</option>\r\n                    <option value=\"PR\">Puerto Rico</option>\r\n                    <option value=\"QA\">Qatar</option>\r\n                    <option value=\"RE\">Réunion</option>\r\n                    <option value=\"RO\">Romania</option>\r\n                    <option value=\"RU\">Russian Federation</option>\r\n                    <option value=\"RW\">Rwanda</option>\r\n                    <option value=\"BL\">Saint Barthélemy</option>\r\n                    <option value=\"SH\">Saint Helena, Ascension and Tristan da Cunha</option>\r\n                    <option value=\"KN\">Saint Kitts and Nevis</option>\r\n                    <option value=\"LC\">Saint Lucia</option>\r\n                    <option value=\"MF\">Saint Martin (French part)</option>\r\n                    <option value=\"PM\">Saint Pierre and Miquelon</option>\r\n                    <option value=\"VC\">Saint Vincent and the Grenadines</option>\r\n                    <option value=\"WS\">Samoa</option>\r\n                    <option value=\"SM\">San Marino</option>\r\n                    <option value=\"ST\">Sao Tome and Principe</option>\r\n                    <option value=\"SA\">Saudi Arabia</option>\r\n                    <option value=\"SN\">Senegal</option>\r\n                    <option value=\"RS\">Serbia</option>\r\n                    <option value=\"SC\">Seychelles</option>\r\n                    <option value=\"SL\">Sierra Leone</option>\r\n                    <option value=\"SG\">Singapore</option>\r\n                    <option value=\"SX\">Sint Maarten (Dutch part)</option>\r\n                    <option value=\"SK\">Slovakia</option>\r\n                    <option value=\"SI\">Slovenia</option>\r\n                    <option value=\"SB\">Solomon Islands</option>\r\n                    <option value=\"SO\">Somalia</option>\r\n                    <option value=\"ZA\">South Africa</option>\r\n                    <option value=\"GS\">South Georgia and the South Sandwich Islands</option>\r\n                    <option value=\"SS\">South Sudan</option>\r\n                    <option value=\"ES\">Spain</option>\r\n                    <option value=\"LK\">Sri Lanka</option>\r\n                    <option value=\"SD\">Sudan</option>\r\n                    <option value=\"SR\">Suriname</option>\r\n                    <option value=\"SJ\">Svalbard and Jan Mayen</option>\r\n                    <option value=\"SZ\">Swaziland</option>\r\n                    <option value=\"SE\">Sweden</option>\r\n                    <option value=\"CH\">Switzerland</option>\r\n                    <option value=\"SY\">Syrian Arab Republic</option>\r\n                    <option value=\"TW\">Taiwan, Province of China</option>\r\n                    <option value=\"TJ\">Tajikistan</option>\r\n                    <option value=\"TZ\">Tanzania, United Republic of</option>\r\n                    <option value=\"TH\">Thailand</option>\r\n                    <option value=\"TL\">Timor-Leste</option>\r\n                    <option value=\"TG\">Togo</option>\r\n                    <option value=\"TK\">Tokelau</option>\r\n                    <option value=\"TO\">Tonga</option>\r\n                    <option value=\"TT\">Trinidad and Tobago</option>\r\n                    <option value=\"TN\">Tunisia</option>\r\n                    <option value=\"TR\">Turkey</option>\r\n                    <option value=\"TM\">Turkmenistan</option>\r\n                    <option value=\"TC\">Turks and Caicos Islands</option>\r\n                    <option value=\"TV\">Tuvalu</option>\r\n                    <option value=\"UG\">Uganda</option>\r\n                    <option value=\"UA\">Ukraine</option>\r\n                    <option value=\"AE\">United Arab Emirates</option>\r\n                    <option value=\"GB\">United Kingdom</option>\r\n                    <option value=\"UM\">United States Minor Outlying Islands</option>\r\n                    <option value=\"UY\">Uruguay</option>\r\n                    <option value=\"UZ\">Uzbekistan</option>\r\n                    <option value=\"VU\">Vanuatu</option>\r\n                    <option value=\"VE\">Venezuela, Bolivarian Republic of</option>\r\n                    <option value=\"VN\">Viet Nam</option>\r\n                    <option value=\"VG\">Virgin Islands, British</option>\r\n                    <option value=\"VI\">Virgin Islands, U.S.</option>\r\n                    <option value=\"WF\">Wallis and Futuna</option>\r\n                    <option value=\"EH\">Western Sahara</option>\r\n                    <option value=\"YE\">Yemen</option>\r\n                    <option value=\"ZM\">Zambia</option>\r\n                    <option value=\"ZW\">Zimbabwe</option>\r\n                </select>\r\n            </div>\r\n            {/*Input for a general overview/description of the object*/}\r\n            <div>\r\n                <label htmlFor=\"areaOverview\">Overview</label>\r\n                <input type=\"text\" name=\"areaOverview\" placeholder=\"Short overview on the area...\"/><br/>\r\n            </div>\r\n            {/*Inputs of the coordinates of the object,\r\n            can be autofilled via geolocation api*/}\r\n            <div>\r\n                <label htmlFor=\"areaCords\">Co-ordinates</label>\r\n                <input type=\"number\" id=\"areaCords\" name=\"latitude\" placeholder='Latitude...'/>\r\n                <input type=\"number\" id=\"areaCords\" name=\"longitude\" placeholder=\"Longitude..\"/><br/>\r\n                {/*Button the allow user to autofill coordinates based on location*/}\r\n                <button type={\"button\"} onClick={getLocation}>Enter my current coordinates</button>\r\n            </div>\r\n            {/*Input for a picture upload section for the form*/}\r\n            <div>\r\n                <label htmlFor=\"pic\">Picture</label>\r\n                <input type=\"file\" id=\"pic\" name=\"pic\" accept=\"image/*\"/>\r\n            </div>\r\n            <input type=\"submit\" value=\"Submit\"/>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Submission;\r\n\r\n","import React from 'react';\r\nimport { Map, GoogleApiWrapper, Marker} from 'google-maps-react'; //Google Maps API imports\r\n\r\n// Style for a map, map will always take the entire container\r\nconst mapStyles = {\r\n    width: '100%',\r\n    height: '100%'\r\n};\r\n\r\n/**\r\n * A container that displaying a google map\r\n * @param props properties of the component\r\n *              props.center is the coordinates of the starting center of the map as a object\r\n * @returns A map component\r\n */\r\nexport const MapContainer = (props) => {\r\n    console.log(props);\r\n\r\n    /**\r\n     * Highlights a list-item on the search results page when a Marker is clicked\r\n     * @param item the id of the list-item to be highlighted\r\n     */\r\n    const handleClick = (item) =>{\r\n        const listItems = document.getElementsByClassName(\"list-item\");\r\n        /*\r\n        Traverses through all list item,\r\n         the list-item with id = item is highlighted, the rest are given another colour\r\n         */\r\n        for(let i = 0; i < listItems.length; i++){\r\n            if(listItems.item(i).id === item) listItems.item(i).style.backgroundColor = \"white\";\r\n            else listItems.item(i).style.backgroundColor = \"#547ec2\";\r\n        }\r\n    };\r\n        return (\r\n            //Google Maps Component centered at the passed in property of center\r\n            <Map google={props.google} zoom={10} style={mapStyles} initialCenter={props.center}>\r\n\r\n                {/*Markers on the map on specific coordinates,\r\n                onClick will highlight a specific item id in the list-view (only applicable of search results page*/}\r\n                <Marker\r\n                    position={{ lat: 43.256531, lng: -79.874420}}\r\n                    onClick={() => handleClick(\"item2\")}/>\r\n                <Marker\r\n                    position={{ lat: 43.0896, lng: -79.0849}}\r\n                    onClick={() => handleClick(\"item1\")}/>\r\n                <Marker\r\n                    position={{ lat: 44.3894, lng: -79.6903}}\r\n                    onClick={() => handleClick(\"item3\")}/>\r\n            </Map>\r\n\r\n        );\r\n};\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyDZ-7P4_Z6trtzAZgL3s_Oq3SEY_Q8TKzw'\r\n})(MapContainer);","import React from 'react';\r\n\r\n/**\r\n * Displays star rating by displaying repeated icons\r\n * @param props properties of the component,\r\n *              props.value is the number of stars to display\r\n * @returns A star rating component (repeated icon elements)\r\n */\r\nconst Star = (props) => {\r\n    //Builds an array of icons of size props.value, each element is a star icon\r\n    let a = [];\r\n    for (let i = 0; i < props.value; i++) {\r\n        a.push(<i className=\"fas fa-star star\"/>);\r\n    }\r\n    return (\r\n        <>{a}</>\r\n    );\r\n};\r\n\r\nexport default Star;","import React from 'react';\r\nimport Stars from \"./Star\"; //Star rating will be displayed on each list item\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n//Prevents all text tags (h2 and p) under NavLink to be styled like link elements\r\nconst linkStyle = {\r\n    textDecoration: 'none',\r\n    color: 'black',\r\n};\r\n\r\n/**\r\n * List Item in the search results page\r\n * @param props properties of the component\r\n *              props.id is the id of the list-item\r\n *              props.title is the title of the list item\r\n *              props.stars is the rating of the list item\r\n *              props.children is the description of the list item\r\n * @returns A list Item component\r\n */\r\nconst ListItem = (props) => {\r\n    return(\r\n        //Entire list item is contained in a NavLink to make the entire component clickable to change pages\r\n        <NavLink to={props.to} style={linkStyle}>\r\n\r\n            {/*the list item is given the id property that was passed in*/}\r\n            <li id={props.id} className=\"list-item\">\r\n\r\n                {/*The image is contained in this div*/}\r\n                <div className=\"item-image\"/>\r\n\r\n                {/*Container for description, rating, and description*/}\r\n                <div>\r\n                    <h2>{props.title}\r\n                        <Stars value={props.stars}/> {/* Star component used for readability and cleanliness*/}\r\n                    </h2>\r\n                    <p> {props.children} </p>\r\n                </div>\r\n            </li>\r\n        </NavLink>\r\n    );\r\n};\r\n\r\nexport default ListItem;","import React from 'react';\r\nimport {useState} from 'react'\r\nimport {useLocation} from 'react-router-dom';\r\nimport './results.css'\r\n\r\n//Components within the results page\r\nimport MapContainer from \"./MapContainer\";\r\nimport ListItem from \"./Submission/ListItem\";\r\n\r\n/**\r\n * Toggles map view in mobile version of the results page\r\n */\r\nconst toggleMap = () => {\r\n    document.querySelector(\".toggle-switch\").classList.toggle('toggle-map');\r\n    document.querySelector(\".map-view\").classList.toggle('map-view-enable');\r\n};\r\n\r\n/**\r\n * Page that displays search results\r\n * @param props properties of the component\r\n *              props.location.locationProps is used by the searchBar to center the map if searched by location\r\n * @returns A Results Component\r\n */\r\nconst Results = (props) => {\r\n    const location = useLocation();\r\n    const [results] = useState([\r\n        {to: \"../Area\", id:\"item1\", stars: 5, title:\"Niagara Region\",\r\n            description: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Amet, optio!\"},\r\n        {to: \"../Area\", id:\"item2\", stars: 3, title:\"Hamilton\",\r\n            description: \"Hamilton features many types of factories: \" +\r\n                \"Big factories, small factories, and even medium factories.\"},\r\n        {to: \"../Area\", id:\"item3\", stars: 4, title:\"Barrie\",\r\n            description: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Doloremque esse placeat suscipit.\"},\r\n        {to: \"../Area\", id:\"item3\", stars: 4, title:\"Barrie\",\r\n            description: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Doloremque esse placeat suscipit.\"},\r\n        {to: \"../Area\", id:\"item3\", stars: 1, title:\"Barrie\",\r\n            description: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Doloremque esse placeat suscipit.\"}\r\n    ]);\r\n\r\n\r\n    return (\r\n        //Empty container for all elements as JSX does not allow adjacent elements\r\n        <>\r\n            {/*Container for the list view of the search results*/}\r\n            <div id=\"list-view\">\r\n\r\n                {/* Each element in the list is a search result displayed as a ListItem Component*/}\r\n                <ul>\r\n                    {results.map(item => {\r\n                        return <ListItem to={item.to} id={item.id} stars={item.stars} title={item.title}>\r\n                            {item.description}\r\n                        </ListItem>\r\n                    })}\r\n                </ul>\r\n            </div>\r\n\r\n            {/*Container for the map view of the search results, displayed using Google Maps API\r\n            The map is centered at the users location if they search by location, or a default location otherwise*/}\r\n            <div className=\"map-view\">\r\n                <MapContainer center={location.state.centerCoords ? location.state.centerCoords :{lat: 43.0896, lng: -79.0849}}/>\r\n            </div>\r\n\r\n            {/* Toggle switch to toggle between map and list view on mobile */}\r\n            <div id=\"toggle-background\">\r\n                <p className=\"toggle noselect\">LIST</p>\r\n                {/*When toggle button is clicked, the map-view is toggled via toggleMap function*/}\r\n                <div className=\"toggle\" onClick={toggleMap}>\r\n                    <div className=\"toggle-switch\">\r\n                    </div>\r\n                </div>\r\n                <p className=\"toggle noselect\">MAP</p>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Results;","import React from 'react';\r\nimport './area.css'\r\nimport Star from \"./Submission/Star\";\r\nimport MapContainer from \"./MapContainer\";\r\n\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <div className=\"area-container\">\r\n            <div className=\"description\">\r\n                <h1>Niagara Region</h1>\r\n                <li className=\"known-for\">\r\n                    <span>Tourist Region</span>\r\n                    <span>Waterfall</span>\r\n                    <span>Nature</span>\r\n                </li>\r\n                <p>Tourist region in Canada Ontario most known for Niagara Falls, the most powerful falls in North\r\n                    America</p>\r\n            </div>\r\n\r\n            <div className=\"obj-overview-content\">\r\n                <div id=\"remove-style\" className=\"obj-pictures\">\r\n                    <div className=\"overview-main-image\"><h1>Photo (22)</h1></div>\r\n                    <div className=\"side-image overview-side-image1\"/>\r\n                    <div className=\"side-image overview-side-image2\"/>\r\n                    <div className=\"side-image overview-side-image3\"/>\r\n                </div>\r\n                <div className=\"obj-review-overview\">\r\n                    <h1>Review Overview</h1>\r\n                    <div className=\"obj-overview-rating\">\r\n            <span>Rating\r\n            <Star value={5}/>\r\n            </span>\r\n                        <a href=\"#reviews\" className=\"obj-overview-rating-allreviews\"> 39 Reviews</a>\r\n                    </div>\r\n                    <div className=\"obj-overview-list\">\r\n                        <li>\r\n                            <div className=\"active-review left-style five-overview \">5 Star Reviews</div>\r\n                            <div className=\"right-style five-overview-bar\">95%</div>\r\n                        </li>\r\n                        <li>\r\n                            <div className=\"left-style four-overview\">4 Star Reviews</div>\r\n                            <div className=\"right-style four-overview-bar\">5%</div>\r\n                        </li>\r\n                        <li>\r\n                            <div className=\"left-style three-overview\">3 Star Reviews</div>\r\n                            <div className=\"right-style three-overview-bar\">0%</div>\r\n                        </li>\r\n                        <li>\r\n                            <div className=\"left-style two-overview\">2 Star Reviews</div>\r\n                            <div className=\"right-style two-overview-bar\">0%</div>\r\n                        </li>\r\n                        <li>\r\n                            <div className=\"left-style one-overview\">1 Star Reviews</div>\r\n                            <div className=\"right-style one-overview-bar\">0%</div>\r\n                        </li>\r\n                    </div>\r\n                    <div className=\"obj-overview-reviews\">\r\n                        <div className=\"overview-review-list\">\r\n                            <li><h3>Username1</h3><p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Ex,\r\n                                soluta!</p></li>\r\n                            <li><h3>Username2</h3><p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Dicta\r\n                                consectetur voluptatum beatae sint voluptate illo, ipsa quis labore assumenda excepturi\r\n                                dignissimos adipisci. Dolorum esse ab ipsam molestiae sequi vero voluptas.</p></li>\r\n                            <li><h3>Username3</h3><p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Ipsam,\r\n                                eligendi dolore dicta at quasi nisi.</p></li>\r\n                            <li><h3>Username4</h3><p>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Facilis\r\n                                odio eligendi consequatur perspiciatis earum officia modi dolorum illum voluptatem\r\n                                sit!</p></li>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"obj-travel-overview\">\r\n                    <div className=\"travel-info\">\r\n                        <h2>Travel Overview</h2>\r\n                        <div>\r\n                            <h3><i className=\"fa fa-globe\" aria-hidden=\"true\"/> Location: <br/> Canada, Ontario</h3>\r\n                            <h3><i className=\"fas fa-map\"/> Area: <br/> Niagara</h3>\r\n                            <h3><i className=\"fa fa-map-marker\" aria-hidden=\"true\"/> Latitute,\r\n                                Longitude: <br/> 43.0582 N, 79.2902 W</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"overview-map\">\r\n                        <MapContainer center={{ lat: 43.0896, lng: -79.0849}}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"obj-location-overview\">\r\n                    <h2> Location Overview</h2>\r\n                    <p>Niagara is a region located in south Ontario, Canada, between Lake Ontario and Lake Erie. It is\r\n                        an 'area of wonder' with a breathtaking waterfall, nature trails, events and festivities and\r\n                        lush vineyards</p>\r\n                    <h3><i className=\"fas fa-desktop\"/> https://niagarafalls.ca/</h3>\r\n                    <h3><i className=\"fas fa-clock\"/> Closes In: 5H</h3>\r\n                    <h3><i className=\"fas fa-clock\"/> People typically spend: 3H here</h3>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"obj-reviews\">\r\n                <div className=\"submit-review-form\">\r\n                    <div className=\"submit-review-border\">\r\n                        <h1>Submit Your Own Review!</h1>\r\n                        <form className=\"review-form\" action=\"\">\r\n                            <div className=\"review-form-item\">\r\n                                <label>Rating</label>\r\n                                <Star value={5}/>\r\n                            </div>\r\n                            <div className=\"review-form-item\">\r\n                                <label htmlFor=\"review-title\">Title</label>\r\n                                <input type=\"text\" id=\"review-title\" name=\"Title\" placeholder=\"\"/>\r\n                            </div>\r\n                            <div className=\"review-form-item\">\r\n                                <label htmlFor=\"review-description\">Description</label>\r\n                                <textarea id=\"review-description\" name=\"message\" rows=\"100\" cols=\"100\"/>\r\n                            </div>\r\n                            <div className=\"review-form-item\">\r\n                                <input type=\"submit\" value=\"Submit\"/>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div id=\"reviews\" className=\"obj-review\">\r\n                    <div className=\"obj-review-list\">\r\n                        <li>\r\n                            <span>Username1</span>\r\n                            <Star value={5}/>\r\n                            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quia, pariatur?</p>\r\n                        </li>\r\n                        <li>\r\n                            <span>Username2</span>\r\n                            <Star value={5}/>\r\n                            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Ad blanditiis, ipsa culpa\r\n                                reprehenderit animi voluptatibus.</p>\r\n                        </li>\r\n                        <li>\r\n                            <span>Username3</span>\r\n                            <Star value={5}/>\r\n                            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi neque accusamus\r\n                                aspernatur optio blanditiis dicta tempore excepturi quibusdam qui incidunt!</p>\r\n                        </li>\r\n                        <li>\r\n                            <span>Username4</span>\r\n                            <Star value={5}/>\r\n                            <p> Lorem ipsum dolor sit amet, consectetur adipisicing elit. Libero quidem sed\r\n                                pariatur!</p>\r\n                        </li>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React, {useState} from 'react'; //React hooks, allows state to be used in functional components\r\n\r\nimport SearchBar from '../Search/SearchBar'; //Component for the nav searchbar\r\nimport SigninLoginButton from '../Buttons/SigninLoginButton'; //Component for the nav sign in and login buttons\r\n\r\nimport { NavLink, useLocation } from 'react-router-dom'; //Component to switch between pages via ReactRouter\r\n\r\nimport \"./Navbar.css\"; //Styling specific to the NavBar\r\n\r\n/**\r\n * The NavBar of a page\r\n * @returns A NavBar Component\r\n */\r\nconst Navbar = (props) => {\r\n    //isOpen is a state variable, when true the mobile version of the NavBar is open, toggleLinks controls isOpen\r\n    const [isOpen, toggleLinks] = useState(false);\r\n    let location = useLocation();\r\n\r\n    return(\r\n        //Container with NavBar contents\r\n        <nav id=\"navbar\" className={location.pathname === \"/Review\" ? \"transparent\" : \"\"}>\r\n            {/*Routes to the home page when the logo is pressed */}\r\n            <NavLink to=\"/Review\" id=\"nav-brand\"/>\r\n\r\n            {/*Container with the nav search bar*/}\r\n            <div className=\"search-nav\">\r\n                <SearchBar/>\r\n            </div>\r\n\r\n            {/*Container with the sign in and login buttons*/}\r\n            <div className=\"buttons-nav\">\r\n                    <SigninLoginButton setLoginSignup={props.setLogin} formName={\"login\"}> Login </SigninLoginButton>\r\n                    <SigninLoginButton setLoginSignup={props.setSignup} formName={\"signup\"}> Sign Up </SigninLoginButton>\r\n            </div>\r\n\r\n            {/* Hamburger button in the mobile version of the NavBar,\r\n             when clicked isOpen = !isOpen*/}\r\n            <div className=\"hamburger\" onClick={() => toggleLinks(!isOpen)}>\r\n                <div className=\"line\"/>\r\n                <div className=\"line\"/>\r\n                <div className=\"line\"/>\r\n            </div>\r\n\r\n            {/*List of links to other areas of the site.\r\n            isOpen controls a conditional render for the mobile version of the navbar,\r\n            if true the open class is enabled therfore the links are visible*/}\r\n            <ul className={`nav-links ${isOpen ? 'open' : ''}`}>\r\n                <NavLink to={\"/Submission\"} onClick={() => toggleLinks(!isOpen)}>Add Area</NavLink>\r\n                <NavLink to={\"/Submission\"} onClick={() => toggleLinks(!isOpen)}>My List</NavLink>\r\n                <NavLink to={\"/Submission\"} onClick={() => toggleLinks(!isOpen)}>Contact</NavLink>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport './Footer.css'; //Styling specific to the footer\r\n\r\n/**\r\n * Footer of a page\r\n * @returns A Footer Component\r\n */\r\nconst Footer = () => {\r\n\r\n    return (\r\n        //Container for the entire footer\r\n        <footer className=\"web-footer\">\r\n            {/*Contents on the left side of the footer*/}\r\n            <div className=\"left-side\">\r\n                <h4>Contact Us:</h4>\r\n                <h5>Phone Number: (905) 525-9140</h5>\r\n                <h5>Address: 1280 Main St W, Hamilton, ON L8S 4L8</h5>\r\n                <h6><br/><br/>Areago © 2019</h6>\r\n            </div>\r\n            {/*Contents on the right side of the footer (social media links)*/}\r\n            <div className=\"right-side\">\r\n                <a><i className=\"fab fa-twitter\"></i></a>\r\n                <a><i className=\"fab fa-facebook-f\"></i></a>\r\n            </div>\r\n        </footer>\r\n\r\n    );\r\n}\r\n\r\nexport default Footer;","import {useState} from 'react';\r\n\r\n\r\n/**\r\n * creates a generic hook for sign up forms (identifies behaviors for submit and inputchange)\r\n * @returns {{displayError: displayError, handleSubmit: handleSubmit, inputs: {}, validationErrors: {}, handleInputChange: handleInputChange}}\r\n */\r\nconst useSignUpForm = () => {\r\n    const [inputs, setInputs] = useState({}); //state variable to keep track of the field inputs\r\n    const [validationErrors] = useState({}); //variable to contain all the input field errors. We use a state variable to update the page when rerendered\r\n    const [wasFocused] = useState({});\r\n    const [errorMessage, setErrorMessage] = useState({});\r\n\r\n\r\n    /**\r\n     * checks everything is in order after submitting\r\n     * @param event submit\r\n     */\r\n    const handleSubmit = (event) => {\r\n        let errorExists = false; //initializes a variable to check if any errors exist\r\n        if (event) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        for (const field of Object.values(validationErrors)){ //for every elements in validationErrors (every form error)\r\n            for (const error of Object.values(field)){ //for every error within those form errors\r\n                if (error != null) { //if the error is not null (an error exists)\r\n                    errorExists = true; //there exists an error\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if(errorExists){ //if an error was found\r\n            alert(\"errors\");\r\n            return; //doesn't submit\r\n        }\r\n        alert(\"No Errors\");\r\n    };\r\n\r\n    /**\r\n     * updates state when input changes\r\n     * @param event field being changed\r\n     */\r\n    const handleInputChange = (event) => {\r\n        event.persist();\r\n        validateField(event.target);//checks for errors within the current form being changed\r\n\r\n        //The setInputs will rerender the page, also causing errors to rerender\r\n        setInputs(\r\n            inputs => ({...inputs, [event.target.name]: event.target.value})\r\n            );\r\n\r\n        if (wasFocused[event.target.name]){\r\n            for(const error of Object.values(validationErrors[event.target.name])){ //for every error in this form's error object\r\n                if (error != null){ //if the error is not null (an error exists)\r\n                    setErrorMessage(\r\n                        errorMessage => ({...errorMessage, [event.target.name]: error})\r\n                    );\r\n                    return;//here we return rather than concatenating errors because we'd only like to display one error at a time\r\n                }\r\n            }\r\n            setErrorMessage(\r\n                errorMessage => ({...errorMessage, [event.target.name]: ''})\r\n            );\r\n        }\r\n    };\r\n\r\n    /**\r\n     * function to display a form's error if an error exists.\r\n     * @param event the current form\r\n     */\r\n    const displayError = (event) => {\r\n        event.persist();\r\n        if (validationErrors[event.target.name]){ //if the form has its error attribute added already (the user didnt just leave the field empty)\r\n            wasFocused[event.target.name] = true;\r\n            for(const error of Object.values(validationErrors[event.target.name])){ //for every error in this form's error object\r\n                if (error != null){ //if the error is not null (an error exists)\r\n                    setErrorMessage(\r\n                        errorMessage => ({...errorMessage, [event.target.name]: error})\r\n                    );\r\n                    return;//here we return rather than concatenating errors because we'd only like to display one error at a time\r\n                }\r\n            }\r\n            setErrorMessage(\r\n                errorMessage => ({...errorMessage, [event.target.name]: ''})\r\n            );\r\n        }\r\n    };\r\n\r\n\r\n    /**\r\n     * Function that updates field errors\r\n     * @param fieldname the field being updated\r\n     */\r\n    const validateField = (fieldname) => {\r\n        let fieldLength = fieldname.value.length;//gets the # of characters in the field\r\n\r\n        //switch statement to update errors for fields accordingly\r\n        switch(fieldname.name) {\r\n            case 'displayName':\r\n                validationErrors[fieldname.name] = {\r\n                    'inputError': fieldname.value.match(/^([a-zA-Z]+\\s)*[a-zA-Z]+$/) ? null : 'invalid name, your name can only contain letters', //regex that matches for names. Names cannot begin or end with whitespace. Only one whitespace is allowed between strings\r\n                    'lengthError': (fieldLength > 2 && fieldLength < 20) ? null : 'invalid name length' //name length must be greater than 2 and less than 20\r\n                };\r\n                break;\r\n            case 'userEmail':\r\n                validationErrors[fieldname.name] = {\r\n                    'inputError' : fieldname.value.match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/) ? null : 'invalid email' //regex that matches for emails. Allows special characters and ensures an @ is followed by a string which is followed by .\r\n                };\r\n                break;\r\n            case 'userName':\r\n                validationErrors[fieldname.name] = {\r\n                    'inputError' : fieldname.value.match(/^[a-zA-Z0-9]+$/) ? null : 'invalid username, your name can only contain letters and numbers', //regex that matches for names with letters and numbers only\r\n                    'lengthError': (fieldLength > 4 && fieldLength < 20) ? null : 'invalid user name length' //ensures username is greater than 4 and less than 20 characters\r\n                };\r\n                break;\r\n            case 'userPassword':\r\n                validationErrors[fieldname.name] = {\r\n                    // should password have regex? Revisit later\r\n                    // ['inputError'] : fieldname.value.match(//) ? null : 'invalid password',\r\n                    'lengthError' : (fieldLength > 6 && fieldLength < 30) ? null : 'invalid password length' //ensures password is greater than 6 and less than 30 characters\r\n                };\r\n                break;\r\n            case 'terms':\r\n                validationErrors[fieldname.name] = {\r\n                    'inputError' : fieldname.checked ? null : 'You must accept the terms', //ensures user has checked the agree to terms checkbox\r\n                };\r\n                break;\r\n            default: break;\r\n\r\n        }\r\n    };\r\n\r\n    return { //returns the following functions and state variables\r\n        handleSubmit,\r\n        handleInputChange,\r\n        displayError,\r\n        inputs,\r\n        validationErrors,\r\n        errorMessage\r\n    };\r\n\r\n\r\n};\r\n\r\nexport default useSignUpForm;","import React from 'react';\r\n\r\nimport useSignUpForm from './FormHook';\r\n\r\n/**\r\n * Sign up form component\r\n * @returns {*}\r\n */\r\nconst SignupForm = (props) => {\r\n\r\n    const {inputs, handleInputChange, handleSubmit, displayError, validationErrors, errorMessage} = useSignUpForm(); //retrieves the following functions and state variables from the form hook\r\n    console.log({validationErrors});\r\n\r\n\r\n    return (\r\n        <div className={\"blur-background\"}>\r\n            <form onSubmit={handleSubmit} id=\"pop-up-form\" className={\"form-style\"}>{/*Runs the handleSubmit function from form hookwhen the submit button is clicked*/}\r\n                    <a onClick={() => props.setSignup(false)} className=\"close\" />{/*closes the form on click by running toggleForm function*/}\r\n                    <h1>Create an Account</h1>\r\n                    <div>\r\n                        <label>Name</label>\r\n                        <input onBlur={displayError} type=\"text\" name=\"displayName\" onChange={handleInputChange} value={inputs.displayName} required/><br/>{/*Runs the displayError function from form hook onBlur (when the field loses focus)*/}\r\n                        <p htmlFor=\"displayName\" className={\"error-message myclass\"}>{errorMessage.displayName}</p>{/*paragraph element to display any errors with the input of the field*/}\r\n                    </div>\r\n                    <div>\r\n                        <label>Email</label>\r\n                        <input onBlur={displayError} type=\"email\" name=\"userEmail\" onChange={handleInputChange} value={inputs.userEmail} required/><br/>{/*runs the handleInputChange function from form hook on input change*/}\r\n                        <p htmlFor=\"userEmail\" className={\"error-message\"}>{errorMessage.userEmail}</p>\r\n                    </div>\r\n                    <div>\r\n                        <label>Username</label>\r\n                        <input onBlur={displayError} type=\"text\" name=\"userName\" onChange={handleInputChange} value={inputs.userName} required/><br/>\r\n                        <p htmlFor=\"userName\" className={\"error-message\"}>{errorMessage.userName}</p>\r\n                    </div>\r\n                    <div>\r\n                        <label>Password</label>\r\n                        <input onBlur={displayError} type=\"password\" name=\"userPassword\" onChange={handleInputChange} value={inputs.userPassword} required/><br/>\r\n                        <p htmlFor=\"userPassword\" className={\"error-message\"}>{errorMessage.userPassword}</p>\r\n                    </div>\r\n                    {/*<label>Re-enter Password</label>*/}\r\n                    {/*<input type=\"password\" id=\"passwordConfirm\" name=\"password\" onChange={handleInputChange} value={inputs.passwordConfirm}/><br/>*/}\r\n                    <div className=\"terms-and-conditions\">\r\n                        <input type=\"checkbox\" id=\"terms\" name=\"terms\" onChange={handleInputChange} value=\"true\"/>I accept the Terms and Conditions\r\n                    </div>\r\n                    <input type=\"submit\" value={\"Sign Up\"}/>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignupForm;","import React from 'react';\r\nimport useSignUpForm from './FormHook';\r\nimport './Form.css'\r\n\r\n/**\r\n * Login Form Component\r\n * @returns {*}\r\n */\r\nconst LoginForm = (props) => {\r\n    const {inputs, handleInputChange, handleSubmit} = useSignUpForm(); //retreives functions and state variables from form hook\r\n\r\n\r\n    return (\r\n        <div className={\"blur-background\"}>\r\n            <form onSubmit={handleSubmit} id=\"pop-up-form\" className={\"form-style\"}>{/*Runs the handleSubmit function from form hook when submit button is clicked*/}\r\n                <a onClick={()=> props.setLogin(false)} className=\"close\"/>{/*Runs the toggleForm function on click to close the form*/}\r\n                <h1>Login</h1>\r\n                <div>\r\n                    <label>Username</label>\r\n                    <input type=\"text\" name=\"userName\" onChange={handleInputChange} value={inputs.userName} required/><br/>{/*Runs the handleInputChange function in form hook on input change*/}\r\n                </div>\r\n                <div>\r\n                    <label>Password</label>\r\n                    <input type=\"password\" name=\"userPassword\" onChange={handleInputChange} value={inputs.userPassword} required/><br/>\r\n                </div>\r\n                <input type=\"submit\" value=\"Login\"/>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport './style.css';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\n//Component for every page on the website\r\nimport Home from './components/Home';\r\nimport Submission from './components/Submission';\r\nimport Results from './components/Results';\r\nimport Area from './components/Area';\r\n\r\n//Components for NavBar/Footer (Components that appear on all pages)\r\nimport NavBar from './components/Nav/Navbar';\r\nimport Footer from './components/Footer/Footer';\r\nimport { useState } from 'react';\r\n\r\nimport SignupForm from \"./components/Forms/SignupForm\";\r\nimport LoginForm from \"./components/Forms/LoginForm\";\r\n\r\n/**\r\n * This component represents every page on the website.\r\n * It contains the logic needed to switch between the pages.\r\n * @returns A Page on the website\r\n */\r\nconst App = () => {\r\n\r\n    const [signup, setSignup] = useState(false);\r\n    const [login, setLogin] = useState(false);\r\n\r\n    let form;\r\n\r\n    if(signup){form =\r\n            <div id=\"signup\" className=\"signup\">\r\n                <SignupForm setSignup={setSignup}/>\r\n            </div>\r\n    }\r\n    if(login){form =\r\n        <div id=\"login\" className=\"login\">\r\n            <LoginForm setLogin={setLogin}/>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n      // BrowseRouter Enables switching between components via NavLink Components\r\n      <BrowserRouter>\r\n        <div>\r\n          <NavBar setLogin={setLogin} setSignup={setSignup}/> {/*  Navigation Bar (will be on all pages)*/}\r\n\r\n            {/*Switch Component contains all possible components that\r\n            may be rendered between the NavBar and the Footer*/}\r\n            <Switch>\r\n              {/*<Route path=\"/\" setLogin={setLogin} setSignup={setSignup} component={Home} exact/>*/}\r\n              <Route path=\"/Review\" render={(props) => <Home {...props} setLogin={setLogin} setSignup={setSignup} />} exact/>\r\n              <Route path=\"/Submission\" component={Submission}/>\r\n              <Route path=\"/Results\" component={Results}/>\r\n              <Route path=\"/Area\" component={Area}/>\r\n            </Switch>\r\n\r\n            {/*Content on all pages below*/}\r\n            {/*Container for Sign Up Form*/}\r\n            {/*Container for Log in Form*/}\r\n            {form}\r\n\r\n            <Footer/>\r\n        </div>\r\n      </BrowserRouter>\r\n  )\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App'; //The whole react application\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n//Render the react app into the index.html\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}